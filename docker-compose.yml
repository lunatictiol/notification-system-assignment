services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: fcm_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  
   
  
  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest  
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5  
  
  worker:
    build:
      context: ./worker
    container_name: worker
    volumes:
      - ./worker:/app
    working_dir: /app
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 200M
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: python consumer.py
 
  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    working_dir: /app
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
  frontend:
    image: nginx:alpine
    container_name: frontend
    ports:
      - "8080:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro

volumes:
  pgdata: